generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Server {
    serverName     String           @id @map("_id")
    active         Boolean
    battleye       Boolean
    experimental   Boolean
    serverLocation String
    pvpType        String
    HistoryAuction HistoryAuction[]
    CurrentAuction CurrentAuction[]
}

type Skills {
    magic     Float
    club      Float
    fist      Float
    sword     Float
    fishing   Float
    axe       Float
    distance  Float
    shielding Float
}

type CharacterItem {
    name   String
    amount Int
}

type Outfit {
    name String
    type Int
}

type CharmInfo {
    expansion Boolean
    total     Int
    unspent   Int
}

type HirelingsInfo {
    count   Int
    jobs    Int
    outfits Int
}

type RareItemEntry {
    id   String
    name String
}

model HistoryAuction {
    id                Int     @id @map("_id")
    nickname          String
    auctionEnd        Int
    currentBid        Int
    hasBeenBidded     Boolean
    outfitId          String
    vocationId        Int
    sex               Boolean
    level             Int
    achievementPoints Int
    bossPoints        Int
    tcInvested        Int
    transfer          Boolean
    preySlot          Boolean
    huntingSlot       Boolean

    tags             String[]
    imbuements       String[]
    items            Float[]
    charms           String[]
    quests           String[]
    mounts           String[]
    storeMounts      String[]
    rareAchievements String[]

    storeItems   CharacterItem[]
    outfits      Outfit[]
    storeOutfits Outfit[]

    skills     Skills
    charmInfo  CharmInfo
    hirelings  HirelingsInfo
    server     Server          @relation(fields: [serverName], references: [serverName])
    serverName String
    rareItems  RareItemEntry[]

    @@index([auctionEnd, level, currentBid])
}

model CurrentAuction {
    id                Int     @id @map("_id")
    nickname          String
    auctionEnd        Int
    currentBid        Int
    hasBeenBidded     Boolean
    outfitId          String
    vocationId        Int
    sex               Boolean
    level             Int
    achievementPoints Int
    bossPoints        Int
    tcInvested        Int
    transfer          Boolean
    preySlot          Boolean
    huntingSlot       Boolean

    tags             String[]
    imbuements       String[]
    items            Float[]
    charms           String[]
    quests           String[]
    mounts           String[]
    storeMounts      String[]
    rareAchievements String[]

    storeItems   CharacterItem[]
    outfits      Outfit[]
    storeOutfits Outfit[]

    skills     Skills
    charmInfo  CharmInfo
    hirelings  HirelingsInfo
    server     Server        @relation(fields: [serverName], references: [serverName])
    serverName String
    rareItems  RareItem[]

    @@index([auctionEnd, level, currentBid])
}

model RareItem {
    id               String         @id @default(uuid()) @map("_id")
    name             String
    auction          CurrentAuction @relation(fields: [currentAuctionId], references: [id])
    currentAuctionId Int

    @@unique([name, currentAuctionId])
}

model CurrentRareItems {
    name String @id @map("_id")
}

model LastHistoryScrapedId {
    id            String @id @default(uuid()) @map("_id")
    lastScrapedId Int
}

model UnfinishedAuction {
    id         Int @id @map("_id")
    auctionEnd Int
}

model HistoryStatistics {
    id       String @id @default(uuid()) @map("_id")
    jsonData String
}

model BossChance {
    server   String @id @map("_id")
    jsonData String
}
